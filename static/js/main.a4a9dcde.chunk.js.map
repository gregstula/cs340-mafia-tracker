{"version":3,"sources":["components/Families.js","components/Actions.js","components/Individuals.js","components/Laws.js","components/Businesses.js","App.js","reportWebVitals.js","index.js"],"names":["families","Families","useState","membersShown","setMembersShown","businessesShown","setBusinessesShown","editMode","setEditMode","FamilyRow","props","index","id","Form","Control","size","type","value","name","Button","onClick","toggleEditMode","memberCount","DropDownFamilyActions","DropdownButton","title","Dropdown","Item","as","showMembers","showBusinesses","BusinessesToggle","colSpan","BusinessSubTable","MembersToggle","MembersSubTable","Container","Table","striped","bordered","hover","members","map","member","fname","lname","role","variant","placeholder","businesses","business","address","city","state","fluid","family","Actions","people","Individuals","lawsBrokenShown","setLawsBrokenShown","businessesOwnedShown","setBusinessesOwnedShown","PersonRow","age","mafiaFamily","mafiaRole","DropDownPersonActions","LawsBroken","showLawsBroken","lawsBroken","law","lawName","sentence","BusinessesOwned","number","streetName","zip","familyOwner","Row","Col","person","Fragment","laws","Laws","lawsShown","setLawsShown","LawRow","DropDownLawActions","LawRowBreakers","showLawBreakers","IndividualSubTable","lawBreakers","console","log","szie","BusinessForm","handleSubmit","handleOnChange","e","target","setState","Group","this","businessName","onChange","React","Component","Businesses","businessList","setBusinessList","tableView","setTableView","DropDownBusinessActions","UpdateModal","deleteUrl","Axios","delete","then","response","deleteBusiness","businessID","show","setShow","handleClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","BusinessRow","buildingNumber","individualOwner","useEffect","axios","get","data","input","post","businessNameInput","buildingNumberInput","streetInput","street","cityInput","stateInput","zipInput","Home","App","Navbar","bg","Brand","Nav","className","Link","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4a9dcde.chunk.js","sourcesContent":["import {Container, Form, Row, Col, Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport React, { useState } from 'react';\n\nvar families = [\n  {\n    \"id\": 1,\n    \"name\": \"Omerta\",\n    \"memberCount\": 2,\n    \"members\": [\n      {\n        \"fname\": \"Bill\",\n        \"lname\": \"Omerta\",\n        \"role\": \"Godfather\"\n      },\n      {\n        \"fname\": \"Matthew\",\n        \"lname\": \"Omerta\",\n        \"role\": \"Captain\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"USA Industries\",\n        \"address\": \"1221 Industrial Rd\",\n        \"city\": \"Newark\",\n        \"state\": \"New Jersey\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Murphy\",\n    \"memberCount\": 5,\n    \"members\": [\n      {\n        \"fname\": \"Brian\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Godfather\"\n      },\n      {\n        \"fname\": \"John\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Phil\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Frank\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Alex\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Edgar\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"Domino's\",\n        \"address\": \"54232 NW Road Blvd\",\n        \"city\": \"Corvallis\",\n        \"state\": \"Oregon\"\n      },\n      {\n        \"name\": \"Pizza Hut\",\n        \"address\": \"812 East Blvd\",\n        \"city\": \"Corvallis\",\n        \"state\": \"Oregon\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Scott\",\n    \"memberCount\": 2,\n    \"members\": [\n      {\n        \"fname\": \"Michael\",\n        \"lname\": \"Scott\",\n        \"role\": \"Regional Manager\"\n      },\n      {\n        \"fname\": \"Dwight\",\n        \"lname\": \"Shrewt\",\n        \"role\": \"Assistant to the Regional Manager\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"Dunder Mifflin\",\n        \"address\": \"4120 22nd St\",\n        \"city\": \"Scranton\",\n        \"state\": \"Pennsylvania\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  }\n]\n\n\n\n\nfunction Families() {\n\n  const [membersShown, setMembersShown] = useState(false);\n  const [businessesShown, setBusinessesShown] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n\n  function FamilyRow(props) {\n    if(families[props.index].editMode)\n      return(\n        <tr>\n          <td>{families[props.index].id}</td>\n          <td>\n            <Form>\n              <Form.Control size=\"m\" type=\"text\" value={families[props.index].name} />\n            </Form>\n          </td>\n          <td>#</td>\n          <td><Button type=\"submit\" onClick={() => toggleEditMode(props.index)}>Submit</Button></td>\n        </tr>\n      );\n    else\n      return (\n          <tr>\n            <td>{families[props.index].id}</td>\n            <td>{families[props.index].name}</td>\n            <td>{families[props.index].memberCount}</td>\n            <td>\n              <DropDownFamilyActions index={props.index}/>\n            </td>\n          </tr>\n      );\n  }\n\n\n  function DropDownFamilyActions (props) {\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as=\"button\" onClick={() => ShowMembersSubTable(props.index)}>Show Members</Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => ShowBusinessSubTable(props.index)}>Show Businesses</Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => toggleEditMode(props.index)}>Update</Dropdown.Item>\n        <Dropdown.Item as=\"button\">Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n  function BusinessesToggle(props) {\n    if(!families[props.index].showBusinesses)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"5\">\n          <BusinessSubTable index={props.index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function MembersToggle(props) {\n    if(!families[props.index].showMembers)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"5\">\n          <MembersSubTable index={props.index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function ShowMembersSubTable(index) {\n    families[index].showMembers = !families[index].showMembers;\n    setMembersShown(!membersShown);\n  }\n\n  function ShowBusinessSubTable(index) {\n    families[index].showBusinesses = !families[index].showBusinesses;\n    setBusinessesShown(!businessesShown);\n  }\n\n  function MembersSubTable(props) {\n    return (\n      <Container>\n          <b>Members</b>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Role</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              families[props.index].members.map(member => (\n                <tr>\n                  <td>{member.fname}</td>\n                  <td>{member.lname}</td>\n                  <td>{member.role}</td>\n                  <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n        <Form>\n          <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing member to add to family\" />\n        </Form>\n      </Container>\n    );\n  }\n\n  function BusinessSubTable(props) {\n    return (\n      <Container>\n          <b>Businesses Ownes</b>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Business Name</th>\n              <th>Street Address</th>\n              <th>City</th>\n              <th>State</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              families[props.index].businesses.map(business => (\n                <tr>\n                  <td>{business.name}</td>\n                  <td>{business.address}</td>\n                  <td>{business.city}</td>\n                  <td>{business.state}</td>\n                  <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n        <Form>\n          <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing business to add to businesses owned by this family\" />\n        </Form>\n      </Container>\n    );\n  }\n\n  function toggleEditMode(index) {\n    families[index].editMode = !families[index].editMode;\n    setEditMode(!editMode);\n  }\n\n  return (\n    <Container fluid>\n    <h1>Families</h1>\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th># of members</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          <tr>\n              <td>Input new family</td>\n            <td>\n              <Form>\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Name\" />\n              </Form>\n            </td>\n            <td>#</td>\n            <td>\n              <Button type=\"submit\">Create</Button>\n            </td>\n          </tr>\n          {\n            families.map((family, index) => (\n              <>\n                <FamilyRow index={index} />\n                <MembersToggle index={index} />\n                <BusinessesToggle index={index} />\n              </>\n            ))\n          }\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\n\nexport default Families;\n","import {Container, Button} from 'react-bootstrap';\n\n\nfunction Actions() {\n    return (\n      <Container>\n      <Button type=\"update\" size=\"sm\" className=\"mr-1\">Update</Button>\n      <br></br><br></br>\n      <Button type=\"delete\" variant=\"danger\" size=\"sm\">Delete</Button>\n      </Container>\n   );\n}\n\nexport default Actions\n","//\nimport {Container, Form, Row, Col, Button} from 'react-bootstrap';\nimport Actions from './Actions';\nimport Table from 'react-bootstrap/Table';\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport React, { useState } from 'react';\n\n\nvar people = [\n  {\n    \"id\":1,\n    \"fname\":\"Bill\",\n    \"lname\":\"Omerta\",\n    \"age\":40,\n    \"mafiaFamily\":\"Omerta\",\n    \"mafiaRole\":\"Godfater\",\n    \"showLawsBroken\":false,\n    \"showBusinesses\":false,\n    \"lawsBroken\": [\n      {\n        \"lawName\":\"murder\",\n        \"sentence\":\"death\"\n      },\n      {\n        \"lawName\":\"blackmail\",\n        \"sentence\":\"$50 fine\"\n      }\n    ],\n    \"businesses\":[\n      {\n        \"name\":\"The Gomorrah\",\n        \"number\":\"34587\",\n        \"streetName\":\"Highway way\",\n        \"city\":\"Paris\",\n        \"state\":\"yes\",\n        \"zip\":\"34587\",\n        \"familyOwner\":\"Omerta\"\n      },\n      {\n        \"name\":\"The Laundry place\",\n        \"number\":\"38367\",\n        \"streetName\":\"Street Way\",\n        \"city\":\"Helvetica\",\n        \"state\":\"no\",\n        \"zip\":\"34587\",\n        \"familyOwner\":\"\"\n      }\n    ]\n  },\n  {\n    \"id\":2,\n    \"fname\":\"Bob\",\n    \"lname\":\"Odenkirk\",\n    \"age\":45,\n    \"mafiaFamily\":\"\",\n    \"mafiaRole\":\"\",\n    \"showLawsBroken\":false,\n    \"showBusinesses\":false,\n    \"lawsBroken\": [\n      {\n        \"lawName\":\"Drug smuggling\",\n        \"sentence\":\"10 years\"\n      },\n      {\n        \"lawName\":\"Forgery\",\n        \"sentence\":\"death\"\n      }\n    ],\n    \"businesses\":[\n      {\n        \"name\":\"Better Call Saul\",\n        \"number\":\"34587\",\n        \"streetName\":\"Highway way\",\n        \"city\":\"Paris\",\n        \"state\":\"yes\",\n        \"zip\":\"34587\",\n        \"familyOwner\":\"\"\n      }\n    ]\n  },\n  {\n    \"id\":3,\n    \"fname\":\"Elon\",\n    \"lname\":\"Musk\",\n    \"age\":49,\n    \"mafiaFamily\":\"\",\n    \"mafiaRole\":\"\",\n    \"showLawsBroken\":false,\n    \"showBusinesses\":false,\n    \"lawsBroken\": [],\n    \"businesses\":[\n      {\n        \"name\":\"SpaceX\",\n        \"number\":\"34587\",\n        \"streetName\":\"Highway way\",\n        \"city\":\"Paris\",\n        \"state\":\"yes\",\n        \"zip\":\"34587\",\n        \"familyOwner\":\"\"\n      },\n      {\n        \"name\":\"Tesla\",\n        \"number\":\"38367\",\n        \"streetName\":\"Street Way\",\n        \"city\":\"Helvetica\",\n        \"state\":\"no\",\n        \"zip\":\"34587\",\n        \"familyOwner\":\"\"\n      }\n    ]\n  }\n];\n\n\nfunction Individuals() {\n\n  const [lawsBrokenShown, setLawsBrokenShown] = useState(false);\n  const [businessesOwnedShown, setBusinessesOwnedShown] = useState(false);\n\n\n  function PersonRow(props) {\n    return (\n        <tr>\n          <td>{people[props.index].id}</td>\n          <td>{people[props.index].fname}</td>\n          <td>{people[props.index].lname}</td>\n          <td>{people[props.index].age}</td>\n          <td>{people[props.index].mafiaFamily}</td>\n          <td>{people[props.index].mafiaRole}</td>\n          <td>\n            <DropDownPersonActions index={props.index}/>\n          </td>\n        </tr>\n    );\n  }\n\n\n  function LawsBroken(props) {\n    if(!people[props.index].showLawsBroken)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"7\">\n              <b>Laws broken</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sentence</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    people[props.index].lawsBroken.map(law => (\n                      <tr>\n                        <td>{law.lawName}</td>\n                        <td>{law.sentence}</td>\n                        <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing law to add to add to this person's list of broken laws\" />\n              </Form>\n        </td>\n      </tr>\n    );\n  }\n\n\n  function BusinessesOwned(props) {\n    if(!people[props.index].showBusinesses)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"7\">\n              <b>Businesses owned</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Number</th>\n                    <th>street Name</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Zip</th>\n                    <th>Family owner</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    people[props.index].businesses.map(business => (\n                      <tr>\n                        <td>{business.name}</td>\n                        <td>{business.number}</td>\n                        <td>{business.streetName}</td>\n                        <td>{business.city}</td>\n                        <td>{business.state}</td>\n                        <td>{business.zip}</td>\n                        <td>{business.familyOwner}</td>\n                        <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing business to add to businesses owned by this person\" />\n              </Form>\n        </td>\n      </tr>\n    );\n  }\n\n\n  function DropDownPersonActions (props) {\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as=\"button\" onClick={() => ShowLawsBrokenSubTable(props.index)}>Show laws broken</Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => ShowBusinessesSubTable(props.index)}>Show businesses owned</Dropdown.Item>\n        <Dropdown.Item as=\"button\">Update</Dropdown.Item>\n        <Dropdown.Item as=\"button\">Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n\n  function ShowLawsBrokenSubTable(index) {\n    people[index].showLawsBroken = !people[index].showLawsBroken;\n    setLawsBrokenShown(!lawsBrokenShown);\n  }\n\n  function ShowBusinessesSubTable(index) {\n    people[index].showBusinesses = !people[index].showBusinesses;\n    setBusinessesOwnedShown(!businessesOwnedShown);\n  }\n\n\n   return (\n    <Container fluid>\n      <h1>Individuals</h1>\n\n      <Form>\n        <Form.Row>\n          <Col>\n            <Form.Control size=\"m\" type=\"text\" placeholder=\"Search\" />\n          </Col>\n          <Col>\n            <Button type=\"search\">Search</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n\n      <p></p>\n\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Age</th>\n            <th>Mafia Family</th>\n            <th>Mafia Role</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          <tr>\n              <td>Auto</td>\n            <td>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"First Name\" />\n              </Form>\n            </td>\n            <td>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Last Name\" />\n              </Form>\n            </td>\n            <td>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Age\" />\n              </Form>\n            </td>\n            <td>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Mafia Family\" />\n              </Form>\n            </td>\n            <td>\n              <Form>\n                <Form.Control size=\"m\" type=\"text\" placeholder=\"Mafia Role\" />\n              </Form>\n            </td>\n            <td>\n              <Button size=\"sm\" type=\"submit\">Create</Button>\n            </td>\n          </tr>\n\n          {\n            people.map((person, index) => (\n              <React.Fragment>\n                <PersonRow index={index} />\n                <LawsBroken index={index} />\n                <BusinessesOwned index={index} />\n              </React.Fragment>\n            ))\n          }\n\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\n\n\n\n\nexport default Individuals;\n\n\n// <div>\n//   <Form>\n//     <Form.Label>First Name</Form.Label>\n//     <Form.Control size=\"lg\" type=\"text\" placeholder=\"First Name\" />\n//     <Form.Label>Last Name</Form.Label>\n//     <Form.Control size=\"lg\" type=\"text\" placeholder=\"Last Name\" />\n//     <Form.Label>Age</Form.Label>\n//     <Form.Control size=\"lg\" type=\"text\" placeholder=\"Age\" />\n//     <Form.Label>Mafia Family</Form.Label>\n//     <Form.Control size=\"lg\" type=\"text\" placeholder=\"Family\" />\n//     <Form.Label>Mafia Role</Form.Label>\n//     <Form.Control size=\"lg\" type=\"text\" placeholder=\"Role\" />\n//   </Form>\n//  <Button type=\"submit\">Submit</Button>\n// </div>\n","import {Container, Form, Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table'\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport React, { useState } from 'react';\n\nvar laws = [\n  {\n    \"id\":1,\n    \"name\":\"Extortion\",\n    \"sentence\":\"3 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      }\n    ]\n  },\n  {\n    \"id\":2,\n    \"name\":\"Fraud\",\n    \"sentence\":\"10 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      },\n      {\n        \"fname\":\"Oliver\",\n        \"lname\":\"Twist\"\n      }\n    ]\n  },\n  {\n    \"id\":3,\n    \"name\":\"Tax Evasion\",\n    \"sentence\":\"15 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Bill\",\n        \"lname\":\"Omerta\"\n      },\n      {\n        \"fname\":\"Joe\",\n        \"lname\":\"Alpha\"\n      },\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      },\n      {\n        \"fname\":\"Oliver\",\n        \"lname\":\"Twist\"\n      }\n    ]\n  },\n];\n\n\n\nfunction Laws() {\n    const [lawsShown, setLawsShown] = useState(false);\n\n\n    function LawRow(props) {\n      return (\n          <tr>\n            <td>{laws[props.index].id}</td>\n            <td>{laws[props.index].name}</td>\n            <td>{laws[props.index].sentence}</td>\n            <td>\n              <DropDownLawActions index={props.index}/>\n            </td>\n          </tr>\n      );\n    }\n\n\n    function LawRowBreakers(props) {\n      if(!laws[props.index].showLawBreakers)\n        return null;\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <IndividualSubTable index={props.index}/>\n          </td>\n        </tr>\n      );\n    }\n\n\n    function IndividualSubTable(props) {\n      return (\n        <Container>\n            <b>Law Breakers</b>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                laws[props.index].lawBreakers.map(person => (\n                  <tr>\n                    <td>{person.fname}</td>\n                    <td>{person.lname}</td>\n                    <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </Table>\n          <Form>\n            <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing person to add to the list of people that have broken this law\" />\n          </Form>\n        </Container>\n      );\n    }\n\n\n    function DropDownLawActions (props) {\n      return (\n        <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n          <Dropdown.Item as=\"button\" onClick={() => ShowLawBreakersSubTable(props.index)}>Show law breakers</Dropdown.Item>\n          <Dropdown.Item as=\"button\">Update</Dropdown.Item>\n          <Dropdown.Item as=\"button\">Delete</Dropdown.Item>\n        </DropdownButton>\n      );\n    }\n\n\n    function ShowLawBreakersSubTable(index) {\n      console.log(\"index = \" + index);\n      laws[index].showLawBreakers = !laws[index].showLawBreakers;\n      setLawsShown(!lawsShown);\n      //forceUpdate();\n    }\n\n\n    // const popoverLawActions = (\n    //   <Popover id=\"popover-basic\">\n    //     <Popover.Content>\n    //       <Button size=\"sm\" type=\"showHideSubTable\">Show law breakers</Button>\n    //       <br></br><br></br>\n    //       <Actions />\n    //     </Popover.Content>\n    //   </Popover>\n    // );\n\n\n     return (\n      <Container fluid>\n      <h1>Laws</h1>\n        <Table bordered hover>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Sentence</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n           <tr>\n               <td>\n                   Auto\n               </td>\n              <td>\n                <Form>\n                  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Name\" />\n                </Form>\n              </td>\n              <td>\n                <Form>\n                  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Sentence\" />\n                </Form>\n              </td>\n              <td>\n                <Button szie=\"sm\" type=\"submit\">Create</Button>\n              </td>\n            </tr>\n\n            {\n              laws.map((law, index) => (\n                <React.Fragment>\n                  <LawRow index={index} />\n                  <LawRowBreakers index={index} />\n                </React.Fragment>\n              ))\n            }\n\n          </tbody>\n        </Table>\n      </Container>\n  );\n}\n\n\n\n\n\nexport default Laws;\n","import { Container, Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Modal from 'react-bootstrap/Modal';\nimport { Fragment, useEffect, useState, useRef } from \"react\";\nimport Axios from \"axios\";\nimport axios from 'axios';\n\n\nclass BusinessForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  // Form validation used to clear form on submit\n  // https://github.com/react-bootstrap/react-bootstrap/issues/3730\n\n  // just resets the form input on submit\n  handleSubmit = (onClick) => {\n    onClick(this.state);\n  }\n\n  handleOnChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <>\n        <Form  >\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Name\" name=\"businessName\" value={this.state.businessName} onChange={this.handleOnChange} />\n        </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Building Number\" name=\"buildingNumber\" onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Street\" name=\"street\" onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"City\" name=\"city\" onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"State\" name=\"state\" onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Zip\" name=\"zip\" onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Button type=\"submit\" onClick={() => this.handleSubmit(this.props.onClick)}>{this.props.type}</Button>\n            </Form.Group>\n          </Form.Row>\n        </ Form>\n      </>\n    );\n  }\n}\n\nfunction Businesses() {\n\n  const [businessList, setBusinessList] = useState([]);\n  const [tableView, setTableView] = useState([]);\n\n\n\n  const getUrl = 'https://cs340-mafia-server.herokuapp.com/businesses';\n  //const getUrl = 'http://localhost:8000/businesses/';\n\n  // Fetched the table data when tableView is changed the whole page reRenders with another Select query\n  // using businessList as the second argument causes a loop!!\n  useEffect(() => {\n    axios.get(getUrl).then(response => setBusinessList(response.data));\n  }, [tableView]);\n\n\n  const addBusiness = (input) => {\n    const createUrl = \"https://cs340-mafia-server.herokuapp.com/businesses/create\";\n    //const createUrl = \"http://localhost:8000/businesses/create\";\n    Axios.post(createUrl, {\n      businessNameInput: input.businessName,\n      buildingNumberInput: input.buildingNumber,\n      streetInput: input.street,\n      cityInput: input.city,\n      stateInput: input.state,\n      zipInput: input.zip,\n    }).then(() => {\n      setTableView([]); // does nothing but forces a reRerender\n    });\n  };\n\n  // delete handler\n  const deleteBusiness = (id) => {\n    const deleteUrl = `https://cs340-mafia-server.herokuapp.com/businesses/delete/${id}`\n    Axios.delete(deleteUrl).then((response) => {\n      setTableView([]);\n    });\n  };\n\n\n  // update handler\n  const updateBusiness = (id) => {\n    console.log();\n  };\n\n  function DropDownBusinessActions(props) {\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as={UpdateModal} business={props.business} />\n        <Dropdown.Item as=\"button\" onClick={() => deleteBusiness(props.business.businessID)}>Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n  // Modal pop up form for update form submission\n  function UpdateModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Dropdown.Item as='button' onClick={handleShow}>\n          Update\n        </Dropdown.Item>\n\n        <Modal\n          size=\"xl\"\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={true}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Update {props.business.businessName} ID: {props.business.businessID}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <BusinessForm type=\"Update\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n\n  function BusinessRow(props) {\n    const business = businessList[props.index]\n    return (\n      <tr>\n        <td>{businessList[props.index].businessID}</td>\n        <td>{businessList[props.index].businessName}</td>\n        <td>{businessList[props.index].buildingNumber}</td>\n        <td>{businessList[props.index].streetName}</td>\n        <td>{businessList[props.index].city}</td>\n        <td>{businessList[props.index].state}</td>\n        <td>{businessList[props.index].zip}</td>\n        <td>{businessList[props.index].individualOwner}</td>\n        <td>{businessList[props.index].familyOwner}</td>\n        <td>\n          <DropDownBusinessActions business={business} />\n        </td>\n      </tr>\n    );\n  }\n\n\n  return (\n    <Container fluid>\n      <h1>Businesses</h1>\n      <BusinessForm type=\"Create\" onClick={addBusiness} />\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Number</th>\n            <th>Street Name</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Zip</th>\n            <th>Owner</th>\n            <th>Family</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            businessList.map((business, index) => (\n              <Fragment key={business.businessID}>\n                <BusinessRow index={index} />\n              </Fragment>\n            ))\n          }\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default Businesses;\n","import {Navbar,Nav} from 'react-bootstrap';\nimport Families from './components/Families';\nimport Individuals from './components/Individuals';\nimport Laws from './components/Laws';\nimport Businesses from './components/Businesses';\nimport {HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n     return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Navbar</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/families\">Families</Nav.Link>\n            <Nav.Link as={Link} to=\"/individuals\">Individuals</Nav.Link>\n            <Nav.Link as={Link} to=\"/laws\">Laws</Nav.Link>\n            <Nav.Link as={Link} to=\"/businesses\">Businesses</Nav.Link>\n            </Nav>\n        </Navbar>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/individuals\">\n            <Individuals />\n          </Route>\n          <Route path=\"/families\">\n            <Families />\n          </Route>\n          <Route path=\"/laws\">\n            <Laws />\n          </Route>\n          <Route path=\"/businesses\">\n            <Businesses />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n    return (\n    <div>\n        <h2>Welcome to Mafia tracker!</h2>\n        Please use the links in the navigation bar to manage your entries.\n    </div>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}