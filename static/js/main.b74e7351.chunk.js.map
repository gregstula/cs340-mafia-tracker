{"version":3,"sources":["components/Families.js","components/serverUrl.js","components/Individuals.js","components/Laws.js","components/Businesses.js","App.js","reportWebVitals.js","index.js"],"names":["families","Families","useState","membersShown","setMembersShown","businessesShown","setBusinessesShown","editMode","setEditMode","FamilyRow","props","index","id","Form","Control","size","type","value","name","Button","onClick","toggleEditMode","memberCount","DropDownFamilyActions","DropdownButton","title","Dropdown","Item","as","showMembers","showBusinesses","BusinessesToggle","colSpan","BusinessSubTable","MembersToggle","MembersSubTable","Container","Table","striped","bordered","hover","members","map","member","fname","lname","role","variant","placeholder","businesses","business","address","city","state","fluid","family","serverUrl","entity","IndividualForm","handleSubmit","individualID","handleOnChange","e","target","setState","data","Row","Group","Col","this","firstName","onChange","lastName","age","React","Component","showingBusinesses","Individuals","individualList","setIndividualList","tableView","setTableView","baseUrl","PersonRow","person","familyName","mafiaRole","DropDownPersonActions","PrintBusinessesOwned","findIndex","val","personID","businessesList","businessesOwned","businessName","buildingNumber","streetName","zip","setBusinessOwnerToNullUrl","Axios","put","then","response","i","businessVal","businessID","splice","SetBusinessOwnerToNull","input","searchInput","get","addableBusinesses","GetAddableBusinesses","DisplayAddableBusinesses","length","fName","lName","businessUrl","businessIndex","resonse","SetBusinessOwner","push","GetBusinessesOwned","UpdateModal","deleteIndividual","show","setShow","handleClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","updateIndividual","Footer","useEffect","axios","updateUrl","deleteUrl","delete","createUrl","post","laws","Laws","lawsShown","setLawsShown","LawRow","sentence","DropDownLawActions","LawRowBreakers","showLawBreakers","IndividualSubTable","lawBreakers","console","log","szie","law","Fragment","BusinessForm","Businesses","businessList","setBusinessList","updateBusiness","DropDownBusinessActions","deleteBusiness","BusinessRow","individualOwner","familyOwner","Home","App","Navbar","bg","Brand","Nav","className","Link","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b74e7351.chunk.js","sourcesContent":["import {Container, Form, Row, Col, Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport React, { useState } from 'react';\n\nvar families = [\n  {\n    \"id\": 1,\n    \"name\": \"Omerta\",\n    \"memberCount\": 2,\n    \"members\": [\n      {\n        \"fname\": \"Bill\",\n        \"lname\": \"Omerta\",\n        \"role\": \"Godfather\"\n      },\n      {\n        \"fname\": \"Matthew\",\n        \"lname\": \"Omerta\",\n        \"role\": \"Captain\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"USA Industries\",\n        \"address\": \"1221 Industrial Rd\",\n        \"city\": \"Newark\",\n        \"state\": \"New Jersey\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Murphy\",\n    \"memberCount\": 5,\n    \"members\": [\n      {\n        \"fname\": \"Brian\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Godfather\"\n      },\n      {\n        \"fname\": \"John\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Phil\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Frank\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Alex\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      },\n      {\n        \"fname\": \"Edgar\",\n        \"lname\": \"Murphy\",\n        \"role\": \"Captain\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"Domino's\",\n        \"address\": \"54232 NW Road Blvd\",\n        \"city\": \"Corvallis\",\n        \"state\": \"Oregon\"\n      },\n      {\n        \"name\": \"Pizza Hut\",\n        \"address\": \"812 East Blvd\",\n        \"city\": \"Corvallis\",\n        \"state\": \"Oregon\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Scott\",\n    \"memberCount\": 2,\n    \"members\": [\n      {\n        \"fname\": \"Michael\",\n        \"lname\": \"Scott\",\n        \"role\": \"Regional Manager\"\n      },\n      {\n        \"fname\": \"Dwight\",\n        \"lname\": \"Shrewt\",\n        \"role\": \"Assistant to the Regional Manager\"\n      }\n    ],\n    \"businesses\": [\n      {\n        \"name\": \"Dunder Mifflin\",\n        \"address\": \"4120 22nd St\",\n        \"city\": \"Scranton\",\n        \"state\": \"Pennsylvania\"\n      }\n    ],\n    \"showMembers\": false,\n    \"showBusinesses\": false,\n    \"editMode\":false\n  }\n]\n\n\n\n\nfunction Families() {\n\n  const [membersShown, setMembersShown] = useState(false);\n  const [businessesShown, setBusinessesShown] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n\n  function FamilyRow(props) {\n    if(families[props.index].editMode)\n      return(\n        <tr>\n          <td>{families[props.index].id}</td>\n          <td>\n            <Form>\n              <Form.Control size=\"m\" type=\"text\" value={families[props.index].name} />\n            </Form>\n          </td>\n          <td>#</td>\n          <td><Button type=\"submit\" onClick={() => toggleEditMode(props.index)}>Submit</Button></td>\n        </tr>\n      );\n    else\n      return (\n          <tr>\n            <td>{families[props.index].id}</td>\n            <td>{families[props.index].name}</td>\n            <td>{families[props.index].memberCount}</td>\n            <td>\n              <DropDownFamilyActions index={props.index}/>\n            </td>\n          </tr>\n      );\n  }\n\n\n  function DropDownFamilyActions (props) {\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as=\"button\" onClick={() => ShowMembersSubTable(props.index)}>Show Members</Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => ShowBusinessSubTable(props.index)}>Show Businesses</Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => toggleEditMode(props.index)}>Update</Dropdown.Item>\n        <Dropdown.Item as=\"button\">Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n  function BusinessesToggle(props) {\n    if(!families[props.index].showBusinesses)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"5\">\n          <BusinessSubTable index={props.index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function MembersToggle(props) {\n    if(!families[props.index].showMembers)\n      return null;\n    return (\n      <tr>\n        <td colSpan=\"5\">\n          <MembersSubTable index={props.index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function ShowMembersSubTable(index) {\n    families[index].showMembers = !families[index].showMembers;\n    setMembersShown(!membersShown);\n  }\n\n  function ShowBusinessSubTable(index) {\n    families[index].showBusinesses = !families[index].showBusinesses;\n    setBusinessesShown(!businessesShown);\n  }\n\n  function MembersSubTable(props) {\n    return (\n      <Container>\n          <b>Members</b>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Role</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              families[props.index].members.map(member => (\n                <tr>\n                  <td>{member.fname}</td>\n                  <td>{member.lname}</td>\n                  <td>{member.role}</td>\n                  <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n        <Form>\n          <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing member to add to family\" />\n        </Form>\n      </Container>\n    );\n  }\n\n  function BusinessSubTable(props) {\n    return (\n      <Container>\n          <b>Businesses Ownes</b>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Business Name</th>\n              <th>Street Address</th>\n              <th>City</th>\n              <th>State</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              families[props.index].businesses.map(business => (\n                <tr>\n                  <td>{business.name}</td>\n                  <td>{business.address}</td>\n                  <td>{business.city}</td>\n                  <td>{business.state}</td>\n                  <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n        <Form>\n          <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing business to add to businesses owned by this family\" />\n        </Form>\n      </Container>\n    );\n  }\n\n  function toggleEditMode(index) {\n    families[index].editMode = !families[index].editMode;\n    setEditMode(!editMode);\n  }\n\n  return (\n    <Container fluid>\n    <h1>Families</h1>\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th># of members</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          <tr>\n              <td>Input new family</td>\n            <td>\n              <Form>\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Name\" />\n              </Form>\n            </td>\n            <td>#</td>\n            <td>\n              <Button type=\"submit\">Create</Button>\n            </td>\n          </tr>\n          {\n            families.map((family, index) => (\n              <>\n                <FamilyRow index={index} />\n                <MembersToggle index={index} />\n                <BusinessesToggle index={index} />\n              </>\n            ))\n          }\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\n\nexport default Families;\n","// change var for local or hosted\n\nfunction serverUrl(entity) {\n    const baseUrl = 'https://cs340-mafia-server.herokuapp.com/' + entity;\n    // const baseUrl = 'http://localhost:8000/' + entity;\n    return baseUrl;\n}\n\nexport default serverUrl;\n","import {Container, Form/*, Row*/, Col, Button, Table, Dropdown, DropdownButton, Modal} from 'react-bootstrap';\n//import Actions from './Actions';\n\nimport React, { Fragment, useEffect, useState/*, useRef*/ } from 'react';\n\nimport Axios from \"axios\";\nimport axios from 'axios';\n\nimport serverUrl from './serverUrl';\n\n\nclass IndividualForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { ...this.props.data };\n  }\n\n  // just resets the form input on submit\n  handleSubmit = (onClick) => {\n    if (this.state.individualID) {\n      onClick(this.state.individualID, this.state) //since individualID is available, we're updating something\n    } else {\n      onClick(this.state); //since individualID is unavailable, we're making a new individual\n    }\n  }\n\n  handleOnChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <>\n        <Form  >\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"First name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Last name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Age\" name=\"age\" value={this.state.age} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Button type=\"submit\" onClick={() => this.handleSubmit(this.props.onClick)}>{this.props.type}</Button>\n            </Form.Group>\n          </Form.Row>\n        </ Form>\n      </>\n    );\n  }\n}\n\n\nvar showingBusinesses = [];\nvar showingLawsBroken = [];\n\nfunction Individuals() {\n\n  const [individualList, setIndividualList] = useState([]);\n  const [tableView, setTableView] = useState([]);\n\n  const baseUrl = serverUrl(\"individuals\");\n\n  useEffect(() => {\n    axios.get(baseUrl).then(response => setIndividualList(response.data));\n  }, [tableView]);\n\n\n  function PersonRow(props) {\n    return (\n        <tr>\n          <td>{props.person.individualID}</td>\n          <td>{props.person.firstName}</td>\n          <td>{props.person.lastName}</td>\n          <td>{props.person.age}</td>\n          <td>{props.person.familyName}</td>\n          <td>{props.person.mafiaRole}</td>\n          <td>\n            <DropDownPersonActions person={props.person}/>\n          </td>\n        </tr>\n    );\n  }\n\n\n  function GetBusinessesOwned(personID) {\n    //find the guy we're looking for, adding him if he doesn't exist\n    var index = showingBusinesses.findIndex((val) => {return val.personID == personID})\n    if(index < 0)\n    {\n      showingBusinesses.push({\"personID\": personID, \"businessesOwned\": [], \"addableBusinesses\": []});\n      index = showingBusinesses.length - 1;\n\n      Axios.get(baseUrl + `/getBusinesses/${personID}`).then(response => {\n        showingBusinesses[index].businessesOwned = response.data;\n        //now that we're finished, rerender;\n        setTableView([]);\n      });\n    }\n    else //if he already exists, just remove him\n    {\n      showingBusinesses.splice(index, 1);\n\n      //now that we're finished, rerender;\n      setTableView([]);\n    }\n  }\n\n  function PrintBusinessesOwned(props) {\n    var index = showingBusinesses.findIndex((val) => {return val.personID == props.person.individualID});\n    if(index < 0)\n      return null;\n\n    var businessesList = showingBusinesses[index].businessesOwned;\n\n    return (\n      <tr>\n        <td colSpan=\"7\">\n              <b>Businesses owned</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Number</th>\n                    <th>street Name</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Zip</th>\n                    <th>Family owner</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    businessesList.map(business => (\n                      <tr>\n                        <td>{business.businessName}</td>\n                        <td>{business.buildingNumber}</td>\n                        <td>{business.streetName}</td>\n                        <td>{business.city}</td>\n                        <td>{business.state}</td>\n                        <td>{business.zip}</td>\n                        <td>{business.familyName}</td>\n                        <td><Button size=\"sm\" variant=\"danger\" type=\"delete\" onClick={() => SetBusinessOwnerToNull(business.businessID)}>Delete</Button></td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n              <Form>\n                <Form.Control\n                  size=\"m\"\n                  type=\"text\"\n                  onChange={(input) => {\n                    if(input.target.value) {\n                      GetAddableBusinesses(input.target.value, index)\n                    }\n                    else {\n                      showingBusinesses[index].addableBusinesses = [];\n                    }\n                  }}\n                  placeholder=\"Search for existing business to add to businesses owned by this person\"\n                />\n              </Form>\n              <Button size=\"sm\" type=\"search\" onClick={() => {\n                  setTableView([]);\n                }}>Search</Button>\n              <Button size=\"sm\" variant=\"danger\" type=\"delete\" onClick={() => {\n                  showingBusinesses[index].addableBusinesses = [];\n                  setTableView([]);\n                }}>Clear Results</Button>\n              <DisplayAddableBusinesses index={index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function GetAddableBusinesses(searchInput, index) {\n\n    Axios.get(baseUrl + `/searchBusinesses/${searchInput}`).then(response => {\n      showingBusinesses[index].addableBusinesses = response.data;\n      //setTableView([]);\n    });\n  }\n\n  function DisplayAddableBusinesses(props) {\n\n    var index = props.index;\n\n    if(showingBusinesses[index].addableBusinesses.length == 0)\n      return null;\n\n    return (\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>Business Name</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Current Owner</th>\n            <th>Family Owner</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{\n          showingBusinesses[index].addableBusinesses.map(business => {\n            var fName = business.firstName;\n            var lName = business.lastName;\n            if(!fName)\n              fName = \"\";\n            else\n              lName = \" \" + lName;\n            if(!lName)\n              lName = \"\";\n\n            return (\n              <tr>\n                <td>{business.businessName}</td>\n                <td>{business.city}</td>\n                <td>{business.state}</td>\n                <td>{fName + lName}</td>\n                <td>{business.familyName}</td>\n                <td><Button size=\"sm\" type=\"submit\" onClick={() => SetBusinessOwner(business.businessID, showingBusinesses[index].personID)}>Add</Button></td>\n              </tr>\n            )\n          })\n        }</tbody>\n      </Table>\n    );\n  }\n\n  function SetBusinessOwner(businessID, personID) {\n    const businessUrl = baseUrl + `/setBusinessOwner/${businessID}/${personID}`;\n\n    //if that business was already owned, we need to remove it from the previous owner's businessesOwned\n    showingBusinesses.map(person => {\n      var businessIndex = person.businessesOwned.findIndex(business => {return business.businessID == businessID});\n      if(businessIndex >= 0) {\n        //we've got it, so remove it\n        person.businessesOwned.splice(businessIndex, 1);\n        //return true so that we stop looking\n        return true;\n      }\n      else {\n        return false;\n      }\n    });\n\n    Axios.put(businessUrl).then(resonse => {\n      Axios.get(baseUrl + `/getBusinesses/${personID}`).then(response => {\n        var index = showingBusinesses.findIndex((val) => {return val.personID == personID});\n        showingBusinesses[index].businessesOwned = response.data;\n        //now that we're finished, rerender;\n        setTableView([]);\n      });\n    });\n  }\n\n  function SetBusinessOwnerToNull(id) {\n    const setBusinessOwnerToNullUrl = baseUrl + `/setBusinessOwnerToNull/${id}`;\n    Axios.put(setBusinessOwnerToNullUrl).then((response) => {\n      //the things removed from the database, we just need to remove it from the array\n      showingBusinesses.map((person) => {\n        var i = person.businessesOwned.findIndex((businessVal) => {return businessVal.businessID == id});\n        if(i >= 0)\n          person.businessesOwned.splice(i, 1);\n\n        return i;\n      });\n\n      setTableView([]); //rerender now that the thing in the array has been removed\n    });\n  }\n\n\n  function GetLawsBroken(personID) {\n    //find the guy we're looking for, adding him if he doesn't exist\n    var index = showingLawsBroken.findIndex((val) => {return val.personID == personID})\n    if(index < 0)\n    {\n      showingLawsBroken.push({\"personID\": personID, \"lawsBroken\": [], \"breakableLaws\": []});\n      index = showingLawsBroken.length - 1;\n\n      Axios.get(baseUrl + `/getLawsBroken/${personID}`).then(response => {\n        showingLawsBroken[index].lawsBroken = response.data;\n        //now that we're finished, rerender;\n        setTableView([]);\n      });\n    }\n    else //if he already exists, just remove him\n    {\n      showingLawsBroken.splice(index, 1);\n\n      //now that we're finished, rerender;\n      setTableView([]);\n    }\n  }\n\n  function PrintLawsBroken(props) {\n    var index = showingLawsBroken.findIndex((val) => {return val.personID == props.person.individualID});\n    if(index < 0)\n      return null;\n\n    var lawsList = showingLawsBroken[index].lawsBroken;\n\n    return (\n      <tr>\n        <td colSpan=\"7\">\n              <b>Laws broken</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Law Name</th>\n                    <th>Sentence</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    lawsList.map(law => (\n                      <tr>\n                        <td>{law.lawName}</td>\n                        <td>{law.sentence}</td>\n                        <td><Button size=\"sm\" variant=\"danger\" type=\"delete\" onClick={() => UnBreakLaw(law.lawID)}>Delete</Button></td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n              <Form>\n                <Form.Control\n                  size=\"m\"\n                  type=\"text\"\n                  onChange={(input) => {\n                    if(input.target.value) {\n                      GetBreakableLaws(input.target.value, index)\n                    }\n                    else {\n                      showingLawsBroken[index].breakableLaws = [];\n                    }\n                  }}\n                  placeholder=\"Search for existing laws to add to list of laws broken by this person\"\n                />\n              </Form>\n              <Button size=\"sm\" type=\"search\" onClick={() => {\n                  setTableView([]);\n                }}>Search</Button>\n              <Button size=\"sm\" variant=\"danger\" type=\"delete\" onClick={() => {\n                  showingLawsBroken[index].breakableLaws = [];\n                  setTableView([]);\n                }}>Clear Results</Button>\n              <DisplayAddableBusinesses index={index}/>\n        </td>\n      </tr>\n    );\n  }\n\n  function GetBreakableLaws(searchInput, index) {\n    Axios.get(baseUrl + `/searchLaws/${searchInput}`).then(response => {\n      showingLawsBroken[index].breakableLaws = response.data;\n      //setTableView([]);\n    });\n  }\n\n  function PrintBreakableLaws(props) {\n    var index = props.index;\n\n    if(showingLawsBroken[index].breakableLaws.length == 0)\n      return null;\n\n    return (\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>Law Name</th>\n            <th>Sentence</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{\n          showingLawsBroken[index].breakableLaws.map(law => {\n            return (\n              <tr>\n                <td>{law.lawName}</td>\n                <td>{law.sentence}</td>\n                <td><Button size=\"sm\" type=\"submit\" onClick={() => BreakLaw(law.lawID, showingLawsBroken[index].personID)}>Add</Button></td>\n              </tr>\n            )\n          })\n        }</tbody>\n      </Table>\n    );\n  }\n\n  function BreakLaw(lawID, personID) {\n    const lawUrl = baseUrl + `/breakLaw/${lawID}/${personID}`;\n\n    Axios.post(lawUrl).then(resonse => {\n      Axios.get(baseUrl + `/getLawsBroken/${personID}`).then(response => {\n        var index = showingLawsBroken.findIndex((val) => {return val.personID == personID});\n        showingLawsBroken[index].lawsBroken = response.data;\n        //now that we're finished, rerender;\n        setTableView([]);\n      });\n    });\n  }\n\n  function UnBreakLaw(id) {\n    const unBreakLawUrl = baseUrl + `/unBreakLaw/${id}`;\n    Axios.delete(unBreakLawUrl).then((respons) => {\n      //the things removed from the database, we just need to remove it from the array\n      showingLawsBroken.map((person) => {\n        var i = person.lawsBroken.findIndex((law) => {return law.lawID == id});\n        if(i >= 0)\n          person.lawsBroken.splice(i, 1);\n\n        return i;\n      });\n\n      setTableView([]); //rerender now that the thing in the array has been removed\n    });\n  }\n\n\n  function DropDownPersonActions (props) {\n    //<Dropdown.Item as=\"button\" onClick={() => ShowLawsBrokenSubTable(props.index)}>Show laws broken</Dropdown.Item>\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as=\"button\" onClick={() => GetBusinessesOwned(props.person.individualID)}>Show businesses owned</Dropdown.Item>\n        <Dropdown.Item as={UpdateModal} person={props.person} />\n        <Dropdown.Item as=\"button\" onClick={() => deleteIndividual(props.person.individualID)}>Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n\n  const addIndividual = (input) => {\n  \tconst createUrl = baseUrl + \"/create\";\n  \tAxios.post(createUrl, input).then(() => {\n      setTableView([]); // does nothing but forces a reRerender\n    });\n  }\n\n  function UpdateModal(props) {\n\t   const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Dropdown.Item as='button' onClick={handleShow}>\n          Update\n        </Dropdown.Item>\n\n        <Modal size=\"xl\" show={show} onHide={handleClose} backdrop=\"static\" keyboard={true}>\n          <Modal.Header closeButton>\n            <Modal.Title>Update {props.person.firstName + \" \" + props.person.lastName} ID: {props.person.individualID}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <IndividualForm type=\"Update\" onClick={updateIndividual} data={props.person} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  const updateIndividual = (id, input) => {\n    const updateUrl = baseUrl + `/update/${id}`;\n    axios.put(updateUrl, input ).then(response => setTableView([]));\n  };\n\n  const deleteIndividual = (id) => {\n\t   const deleteUrl = baseUrl + `/delete/${id}`\n    Axios.delete(deleteUrl).then((response) => {\n      setTableView([]);\n    });\n  };\n\n\t//<LawsBroken index={index} />\n\n   return (\n    <Container fluid>\n      <h1>Individuals</h1>\n\n      <Form>\n        <Form.Row>\n          <Col>\n            <Form.Control size=\"m\" type=\"text\" placeholder=\"Search\" />\n          </Col>\n          <Col>\n            <Button type=\"search\">Search</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n\n      <p></p>\n\n\t  <IndividualForm type=\"Create\" onClick={addIndividual} />\n\n\t  <p></p>\n\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Age</th>\n            <th>Mafia Family</th>\n            <th>Mafia Role</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          {\n            individualList.map((person, index) => (\n              <Fragment key={person.individualID}>\n                <PersonRow person={person} />\n                <PrintBusinessesOwned person={person} />\n              </Fragment>\n            ))\n          }\n\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\n\n\n\n\nexport default Individuals;\n","import {Container, Form, Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table'\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport React, { useState } from 'react';\n\nvar laws = [\n  {\n    \"id\":1,\n    \"name\":\"Extortion\",\n    \"sentence\":\"3 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      }\n    ]\n  },\n  {\n    \"id\":2,\n    \"name\":\"Fraud\",\n    \"sentence\":\"10 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      },\n      {\n        \"fname\":\"Oliver\",\n        \"lname\":\"Twist\"\n      }\n    ]\n  },\n  {\n    \"id\":3,\n    \"name\":\"Tax Evasion\",\n    \"sentence\":\"15 years\",\n    \"showLawBreakers\":false,\n    \"lawBreakers\": [\n      {\n        \"fname\":\"Bill\",\n        \"lname\":\"Omerta\"\n      },\n      {\n        \"fname\":\"Joe\",\n        \"lname\":\"Alpha\"\n      },\n      {\n        \"fname\":\"Andrew\",\n        \"lname\":\"Douglas\"\n      },\n      {\n        \"fname\":\"Tony\",\n        \"lname\":\"Soprano\"\n      },\n      {\n        \"fname\":\"Oliver\",\n        \"lname\":\"Twist\"\n      }\n    ]\n  },\n];\n\n\n\nfunction Laws() {\n    const [lawsShown, setLawsShown] = useState(false);\n\n\n    function LawRow(props) {\n      return (\n          <tr>\n            <td>{laws[props.index].id}</td>\n            <td>{laws[props.index].name}</td>\n            <td>{laws[props.index].sentence}</td>\n            <td>\n              <DropDownLawActions index={props.index}/>\n            </td>\n          </tr>\n      );\n    }\n\n\n    function LawRowBreakers(props) {\n      if(!laws[props.index].showLawBreakers)\n        return null;\n      return (\n        <tr>\n          <td colSpan=\"5\">\n            <IndividualSubTable index={props.index}/>\n          </td>\n        </tr>\n      );\n    }\n\n\n    function IndividualSubTable(props) {\n      return (\n        <Container>\n            <b>Law Breakers</b>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                laws[props.index].lawBreakers.map(person => (\n                  <tr>\n                    <td>{person.fname}</td>\n                    <td>{person.lname}</td>\n                    <td><Button size=\"sm\" variant=\"danger\" type=\"delete\">Delete</Button></td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </Table>\n          <Form>\n            <Form.Control size=\"m\" type=\"text\" placeholder=\"Search for existing person to add to the list of people that have broken this law\" />\n          </Form>\n        </Container>\n      );\n    }\n\n\n    function DropDownLawActions (props) {\n      return (\n        <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n          <Dropdown.Item as=\"button\" onClick={() => ShowLawBreakersSubTable(props.index)}>Show law breakers</Dropdown.Item>\n          <Dropdown.Item as=\"button\">Update</Dropdown.Item>\n          <Dropdown.Item as=\"button\">Delete</Dropdown.Item>\n        </DropdownButton>\n      );\n    }\n\n\n    function ShowLawBreakersSubTable(index) {\n      console.log(\"index = \" + index);\n      laws[index].showLawBreakers = !laws[index].showLawBreakers;\n      setLawsShown(!lawsShown);\n      //forceUpdate();\n    }\n\n\n    // const popoverLawActions = (\n    //   <Popover id=\"popover-basic\">\n    //     <Popover.Content>\n    //       <Button size=\"sm\" type=\"showHideSubTable\">Show law breakers</Button>\n    //       <br></br><br></br>\n    //       <Actions />\n    //     </Popover.Content>\n    //   </Popover>\n    // );\n\n\n     return (\n      <Container fluid>\n      <h1>Laws</h1>\n        <Table bordered hover>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Sentence</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n           <tr>\n               <td>\n                   Auto\n               </td>\n              <td>\n                <Form>\n                  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Name\" />\n                </Form>\n              </td>\n              <td>\n                <Form>\n                  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Sentence\" />\n                </Form>\n              </td>\n              <td>\n                <Button szie=\"sm\" type=\"submit\">Create</Button>\n              </td>\n            </tr>\n\n            {\n              laws.map((law, index) => (\n                <React.Fragment>\n                  <LawRow index={index} />\n                  <LawRowBreakers index={index} />\n                </React.Fragment>\n              ))\n            }\n\n          </tbody>\n        </Table>\n      </Container>\n  );\n}\n\n\n\n\n\nexport default Laws;\n","import { Container, Form, Button, Row, Col, Table, Dropdown, DropdownButton, Modal } from 'react-bootstrap';\nimport React from 'react';\nimport { Fragment, useEffect, useState, useRef } from \"react\";\nimport Axios from \"axios\";\nimport axios from 'axios';\nimport serverUrl from './serverUrl';\n\n// Component for business form\n// Much more effecient at handling state and saving render calls\n// Can also be used in Update Component\nclass BusinessForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { ...this.props.data };\n  }\n\n  // just resets the form input on submit\n  handleSubmit = (onClick) => {\n    if (this.state.businessID) {\n      onClick(this.state.businessID, this.state)\n    } else {\n      onClick(this.state);\n    }\n  }\n\n  handleOnChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <>\n        <Form  >\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Name\" name=\"businessName\" value={this.state.businessName} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Building Number\" name=\"buildingNumber\" value={this.state.buildingNumber} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Street\" name=\"streetName\" value={this.state.streetName} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"City\" name=\"city\" value={this.state.city} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"State\" name=\"state\" value={this.state.state} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control size=\"sm\" type=\"text\" placeholder=\"Zip\" name=\"zip\" value={this.state.zip} onChange={this.handleOnChange} />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Button type=\"submit\" onClick={() => this.handleSubmit(this.props.onClick)}>{this.props.type}</Button>\n            </Form.Group>\n          </Form.Row>\n        </ Form>\n      </>\n    );\n  }\n}\n\nfunction Businesses() {\n\n  const [businessList, setBusinessList] = useState([]);\n  const [tableView, setTableView] = useState([]);\n\n  const baseUrl = serverUrl('businesses');\n\n  // Fetched the table data when tableView is changed the whole page reRenders with another Select query\n  // using businessList as the second argument causes a loop!!\n  useEffect(() => {\n    axios.get(baseUrl).then(response => setBusinessList(response.data));\n  }, [tableView]);\n\n\n  const addBusiness = (input) => {\n    const createUrl = baseUrl + \"/create\";\n    Axios.post(createUrl, input).then(() => {\n      setTableView([]); // does nothing but forces a reRerender\n    });\n  };\n\n  // delete handler\n  const deleteBusiness = (id) => {\n    const deleteUrl = baseUrl + `/delete/${id}`\n    Axios.delete(deleteUrl).then((response) => {\n      setTableView([]);\n    });\n  };\n\n\n  // update handler\n  const updateBusiness = (id, input) => {\n    const updateUrl = baseUrl + `/update/${id}`;\n    axios.put(updateUrl, input ).then(response => setTableView([]));\n  };\n\n  function DropDownBusinessActions(props) {\n    return (\n      <DropdownButton id=\"dropdown-item-button\" title=\"Actions\">\n        <Dropdown.Item as={UpdateModal} business={props.business} />\n        <Dropdown.Item as=\"button\" onClick={() => deleteBusiness(props.business.businessID)}>Delete</Dropdown.Item>\n      </DropdownButton>\n    );\n  }\n\n  // Modal pop up form for update form submission\n  function UpdateModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Dropdown.Item as='button' onClick={handleShow}>\n          Update\n        </Dropdown.Item>\n\n        <Modal\n          size=\"xl\"\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={true}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Update {props.business.businessName} ID: {props.business.businessID}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <BusinessForm type=\"Update\" onClick={updateBusiness} data={props.business} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n\n  function BusinessRow(props) {\n    return (\n      <tr>\n        <td>{props.business.businessID}</td>\n        <td>{props.business.businessName}</td>\n        <td>{props.business.buildingNumber}</td>\n        <td>{props.business.streetName}</td>\n        <td>{props.business.city}</td>\n        <td>{props.business.state}</td>\n        <td>{props.business.zip}</td>\n        <td>{props.business.individualOwner}</td>\n        <td>{props.business.familyOwner}</td>\n        <td>\n          <DropDownBusinessActions business={props.business} />\n        </td>\n      </tr>\n    );\n  }\n\n\n  return (\n    <Container fluid>\n      <h1>Businesses</h1>\n      <BusinessForm type=\"Create\" onClick={addBusiness} />\n      <Table bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Number</th>\n            <th>Street Name</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Zip</th>\n            <th>Owner</th>\n            <th>Family</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            businessList.map((business, index) => (\n              <Fragment key={business.businessID}>\n                <BusinessRow business={business} />\n              </Fragment>\n            ))\n          }\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default Businesses;\n","import {Navbar,Nav} from 'react-bootstrap';\nimport Families from './components/Families';\nimport Individuals from './components/Individuals';\nimport Laws from './components/Laws';\nimport Businesses from './components/Businesses';\nimport {HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n     return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Navbar</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/families\">Families</Nav.Link>\n            <Nav.Link as={Link} to=\"/individuals\">Individuals</Nav.Link>\n            <Nav.Link as={Link} to=\"/laws\">Laws</Nav.Link>\n            <Nav.Link as={Link} to=\"/businesses\">Businesses</Nav.Link>\n            </Nav>\n        </Navbar>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/individuals\">\n            <Individuals />\n          </Route>\n          <Route path=\"/families\">\n            <Families />\n          </Route>\n          <Route path=\"/laws\">\n            <Laws />\n          </Route>\n          <Route path=\"/businesses\">\n            <Businesses />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n    return (\n    <div>\n        <h2>Welcome to Mafia tracker!</h2>\n        Please use the links in the navigation bar to manage your entries.\n    </div>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}